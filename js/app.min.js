/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/js/app.js":
/*!************************!*\
  !*** ./dist/js/app.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// import mapboxgl from 'mapbox-gl/dist/mapbox-gl';\r\n// import mapboxgl from 'mapbox-gl';\r\n// mapboxgl = require('mapbox-gl')\r\n\r\n\r\nlet contentPrison = document.getElementById('info');\r\nlet contentMap = document.querySelector('.map');\r\nlet contentMapContainer = document.querySelector('.map__container');\r\nif(contentMap) {\r\n\r\n    mapboxgl.accessToken = 'pk.eyJ1IjoiZ3VsYWsxMjMiLCJhIjoiY2wyNW83OTlpMGZ5dDNxcDZwZmdieGw5biJ9.fnNit_spVwxIep_ahOTQkQ';\r\n    var map = new mapboxgl.Map({\r\n        container: 'map',\r\n        style: 'mapbox://styles/gulak123/cl25ozzsm000414mo0rgvu5fv',\r\n        center: [72.5702, \t49.1961],\r\n        zoom: 8,\r\n        boxZoom: true,\r\n        pitchWithRotate: false,\r\n        dragRotate: false,\r\n        viewportChangeMethod: 'linear'\r\n    });\r\n    \r\n    const geojson = {\r\n        \"type\": \"FeatureCollection\",\r\n        \"features\": [\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'id': 1,\r\n                    \"title\": \"Гулаг\",\r\n                    \"size\": \"500\",\r\n                    \"history\": \"<p>Lorem ipsum</p><p>Lorem ipsum</p><p>Lorem ipsum</p>\",\r\n                    \"source\": \"Система исправительно-трудовых лагерей в СССР, 1923–1960: справочник / составитель М. Б. Смирнов; под редакцией Н. Г. Охотина, А. Б. Рогинского. М., 1998.\",\r\n                    \"link\": \"https://www.novayagazeta.ru/articles/2008/12/04/35579-ostrov-alzhir-v-arhipelage-gulag\",\r\n                    \"files\": ['img/pr1.jpg','img/pr2.jpg','img/pr3.jpg','img/pr3.jpg','img/pr3.jpg','img/pr3.jpg','img/pr3.jpg'],\r\n                    \"stats\": {\r\n                        '1989': 3000,\r\n                        '1999': 5000,\r\n                    },\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"Point\",\r\n                    \"coordinates\": [\r\n                        72.2736,\r\n                        49.4824\r\n                    ]\r\n                }\r\n            },\r\n            {\r\n                \"type\": \"Feature\",\r\n                \"properties\": {\r\n                    'id': 2,\r\n                    \"title\": \"Гулаг - 2\",\r\n                    \"size\": \"1000\",\r\n                    \"history\": \"<p>Lorem ipsum</p><p>Lorem ipsum</p>\",\r\n                    \"source\": \"Система исправительно-трудовых лагерей в СССР, 1923–1960: справочник / составитель М. Б. Смирнов; под редакцией Н. Г. Охотина, А. Б. Рогинского. М., 1998.\",\r\n                    \"link\": \"https://www.novayagazeta.ru/articles/2008/12/04/35579-ostrov-alzhir-v-arhipelage-gulag\",\r\n                    \"files\": ['img/pr1.jpg','img/pr1.jpg'],\r\n                    \"stats\": {\r\n                        '1995': 10000,\r\n                        '2000': 45000,\r\n                    },\r\n                },\r\n                \"geometry\": {\r\n                    \"type\": \"Point\",\r\n                    \"coordinates\": [\r\n                        72.0758,\r\n                        48.5166\r\n                    ]\r\n                }\r\n            },\r\n        ]\r\n    };\r\n    \r\n    \r\n    map.on('load', () => {\r\n        // polygon\r\n        map.addSource('maine', {\r\n            'type': 'geojson',\r\n            'data': {\r\n            'type': 'Feature',\r\n            'geometry': {\r\n            'type': 'Polygon',\r\n            // These coordinates outline Maine.\r\n            'coordinates': [\r\n                [\r\n                  [\r\n                    72.7094486701392,\r\n                    50.0458797175941,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.709377410393,\r\n                    50.0457881951954,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7086648129305,\r\n                    50.0391065887294,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.708522293438,\r\n                    49.9804653868523,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.810281211077,\r\n                    49.9700164965027,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8285237061159,\r\n                    49.9298496524003,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7695206362244,\r\n                    49.7777751432251,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7666702463746,\r\n                    49.7615747124017,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7814922735937,\r\n                    49.7523675097999,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8114213670169,\r\n                    49.7519991853337,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8353646417555,\r\n                    49.7413165590375,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8527520198395,\r\n                    49.7427901645958,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.877835450518,\r\n                    49.7258409984014,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.9679077697727,\r\n                    49.7265780417592,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.0032526039105,\r\n                    49.7133095491713,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.1520429540717,\r\n                    49.7092545643378,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.1828271644499,\r\n                    49.6398988443843,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.2181719985878,\r\n                    49.6055533278277,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.2569373005455,\r\n                    49.5654529558796,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.266058548065,\r\n                    49.5423387005897,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.2954175635182,\r\n                    49.5316099706739,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.3250616179565,\r\n                    49.5284648965918,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.400311909992,\r\n                    49.4599631490607,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.416844171121,\r\n                    49.3731803400875,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.3673899072263,\r\n                    49.2639977097553,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.2967002389505,\r\n                    49.1448081800546,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.2443955852062,\r\n                    49.090822486506,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.1913783339994,\r\n                    49.0045101203172,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.0931824036726,\r\n                    48.910063172411,\r\n                    0\r\n                  ],\r\n                  [\r\n                    73.0385974380485,\r\n                    48.8944412714262,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.978169173232,\r\n                    48.8456939391093,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8695693199535,\r\n                    48.8351882971301,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8547472927344,\r\n                    48.8351882971301,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8453410062299,\r\n                    48.8372520792839,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8370748756654,\r\n                    48.8057232300674,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8275260696685,\r\n                    48.7635599654067,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.8029414572137,\r\n                    48.7508054116929,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7772879485652,\r\n                    48.7613287394547,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7385226466075,\r\n                    48.7680925718417,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7328218669078,\r\n                    48.8120352792909,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6256472085542,\r\n                    48.8018980701369,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5412756689992,\r\n                    48.8142877141446,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5059308348613,\r\n                    48.8199183585546,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5025103670415,\r\n                    48.7992695702808,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5122016925309,\r\n                    48.7609529442783,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4985198212517,\r\n                    48.7286240401792,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5122016925309,\r\n                    48.6386705366903,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4836977940326,\r\n                    48.6377287513343,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4893985737322,\r\n                    48.5404419520029,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4677356108735,\r\n                    48.5257195100905,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4842678720025,\r\n                    48.4837937428574,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4973796653118,\r\n                    48.4656529392237,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5184725502005,\r\n                    48.4301084087622,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5395654350893,\r\n                    48.3858320556056,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5412756689992,\r\n                    48.3422749940768,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5344347333596,\r\n                    48.330906156139,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5298741095998,\r\n                    48.3172602041088,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5144820044108,\r\n                    48.3017145342055,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4489230378647,\r\n                    48.2531512383862,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4244096851561,\r\n                    48.2364469433569,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4118679698169,\r\n                    48.2060615203969,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3611310304899,\r\n                    48.1764183665322,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.342318457481,\r\n                    48.162731127157,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3326271319915,\r\n                    48.1539845894588,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3235058844721,\r\n                    48.1395305209239,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3138145589826,\r\n                    48.1155582278591,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3064035453731,\r\n                    48.1075649769249,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2967122198837,\r\n                    48.095001641934,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2830303486045,\r\n                    48.0904323952179,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2778996468748,\r\n                    48.086243562385,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2727689451451,\r\n                    48.086243562385,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2613673857458,\r\n                    48.0790075020786,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2511059822864,\r\n                    48.0771031065014,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2357138770973,\r\n                    48.0679610264597,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2112005243887,\r\n                    48.0740559269522,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1940981852897,\r\n                    48.0774839912562,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1832667038604,\r\n                    48.0668181522531,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1370903882931,\r\n                    48.0706276342484,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1291092967136,\r\n                    48.0816735374594,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1188478932542,\r\n                    48.1022354522197,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1040258660351,\r\n                    48.1178417854746,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0846432150562,\r\n                    48.130399538175,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0692511098671,\r\n                    48.145997317929,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0179440925702,\r\n                    48.1676741627759,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9902953110268,\r\n                    48.2396743345942,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9141899020364,\r\n                    48.2687116941901,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8505549486388,\r\n                    48.3143694471285,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8232624658267,\r\n                    48.3414224191694,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8029534381466,\r\n                    48.3674195388551,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.7802928388405,\r\n                    48.3822826026766,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.7584160967431,\r\n                    48.3824245855463,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.7353279389594,\r\n                    48.4061774747362,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.7170141841742,\r\n                    48.4255217309341,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.716942924428,\r\n                    48.437531329659,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.7125248201608,\r\n                    48.4398950895307,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.7108145862509,\r\n                    48.4425423700118,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.6954224810618,\r\n                    48.4646134258959,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.6683437774884,\r\n                    48.4636683953041,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.6539493087468,\r\n                    48.502258573764,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.6231650983686,\r\n                    48.5649226849333,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.6174643186689,\r\n                    48.5852906788223,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.6197446305488,\r\n                    48.6154504023937,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.665920946116,\r\n                    48.6700690076906,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.6442579832573,\r\n                    48.7426765114451,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.698985468374,\r\n                    48.8755807498049,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.7628342010103,\r\n                    48.8778303284297,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.783927085899,\r\n                    48.8485779150965,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8329537913161,\r\n                    48.8489530542363,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8449254286854,\r\n                    48.8429504907364,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8557569101148,\r\n                    48.8437008505217,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8711490153039,\r\n                    48.8463270212372,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8871111984629,\r\n                    48.8617061127697,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9230261105708,\r\n                    48.8617061127697,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.953240242979,\r\n                    48.8399489391717,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0917691896808,\r\n                    48.8376976574521,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0854983320111,\r\n                    48.9265463590039,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0487283029483,\r\n                    48.9254226781596,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0316259638493,\r\n                    48.9246735435493,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0096779620056,\r\n                    48.946393884799,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9766134397476,\r\n                    48.9572505115606,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9683473091831,\r\n                    48.9774600043413,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9994165585462,\r\n                    49.0081328319315,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9429788395196,\r\n                    49.0582160797732,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9344276699701,\r\n                    49.1750051876821,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8979426798923,\r\n                    49.1772412706612,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9064938494417,\r\n                    49.504477052593,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9310072021503,\r\n                    49.5259440661376,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.8916718222226,\r\n                    49.566261756692,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9053536935018,\r\n                    49.5777221792687,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9566607107988,\r\n                    49.6379375548895,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9800339075674,\r\n                    49.6700466093537,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9863047652371,\r\n                    49.6818515078016,\r\n                    0\r\n                  ],\r\n                  [\r\n                    71.9965661686964,\r\n                    49.6951285934782,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.02079448242,\r\n                    49.7163275283482,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0239299112548,\r\n                    49.7400961955554,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0507235758432,\r\n                    49.7570403835908,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0564243555428,\r\n                    49.7600326278499,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.0877786438909,\r\n                    49.7753132107766,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1242636339689,\r\n                    49.7905429728824,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1354514141295,\r\n                    49.7989609977744,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1464966747975,\r\n                    49.8082053389098,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1630289359265,\r\n                    49.8201605747391,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1807013529955,\r\n                    49.824574069114,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.1966635361546,\r\n                    49.829538769035,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2100603684488,\r\n                    49.833215996018,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2357138770972,\r\n                    49.8407534373038,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2636476976256,\r\n                    49.8420402001036,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.278826023576,\r\n                    49.8410751312145,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.2976385965849,\r\n                    49.8458543314688,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.313030701774,\r\n                    49.8484275512985,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3238621832033,\r\n                    49.8506330592691,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3375440544825,\r\n                    49.8517357755149,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3478054579419,\r\n                    49.8546762291696,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3614873292211,\r\n                    49.8572489793567,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3671881089207,\r\n                    49.8594540847823,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3747416420228,\r\n                    49.8603728490088,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.3815825776624,\r\n                    49.8734174156119,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.396262085389,\r\n                    49.8807649159069,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4157872558604,\r\n                    49.8796628621364,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4351699068392,\r\n                    49.8882031209049,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4511320899981,\r\n                    49.8903149948861,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.470229701992,\r\n                    49.9051873158863,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.4997312369379,\r\n                    49.9144572455999,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5088524844574,\r\n                    49.9376701397451,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5336508761509,\r\n                    49.9468421144546,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5591618653069,\r\n                    49.9479426340746,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.5637224890666,\r\n                    49.9600466903747,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.589946075685,\r\n                    49.967839358755,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6093287266639,\r\n                    49.9791135748838,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6175948572284,\r\n                    49.9864449807532,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6302790920602,\r\n                    49.9924009253322,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.654293626545,\r\n                    49.9999135263681,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6602081854834,\r\n                    50.0047686074198,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6614908609158,\r\n                    50.0091652388332,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6552200032462,\r\n                    50.0132867155347,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6539373278138,\r\n                    50.0190561891107,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.655790081216,\r\n                    50.0205213419303,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6553625227387,\r\n                    50.0259237067892,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6641987312731,\r\n                    50.0295859814556,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6733199787926,\r\n                    50.0326071478346,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6788782389998,\r\n                    50.036360453429,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.6865742915943,\r\n                    50.0393811936207,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7013963188134,\r\n                    50.0458797175941,\r\n                    0\r\n                  ],\r\n                  [\r\n                    72.7094486701392,\r\n                    50.0458797175941,\r\n                    0\r\n                  ]\r\n                ]\r\n              ]\r\n            }\r\n            }\r\n        });\r\n        map.addLayer({\r\n            'id': 'maine',\r\n            'type': 'fill',\r\n            'source': 'maine', // reference the data source\r\n            'layout': {},\r\n            'paint': {\r\n            'fill-color': '#3E5983', // blue color fill\r\n            'fill-opacity': 0.5\r\n            }\r\n        });\r\n        map.addLayer({\r\n            'id': 'outline',\r\n            'type': 'line',\r\n            'source': 'maine',\r\n            'layout': {},\r\n            'paint': {\r\n            'line-color': '#fff',\r\n            'line-opacity': .15,\r\n            'line-width': 3\r\n            }\r\n        });\r\n        // pointer\r\n        map.addSource('geojson', {\r\n            'type': 'geojson',\r\n            'data': geojson\r\n        });\r\n        map.addLayer({\r\n            id: 'circle',\r\n            type: 'circle',\r\n            source: 'geojson',\r\n            paint: {\r\n                'circle-color': '#be4f4f',\r\n                'circle-radius': 3,\r\n                'circle-stroke-width': 13,\r\n                'circle-stroke-color': '#e47171',\r\n                'circle-stroke-opacity' : 0.2,\r\n            },\r\n            filter: ['in', '$type', 'Point']\r\n        });\r\n    });\r\n    map.on('click', 'circle', (e) => {\r\n        const features = map.queryRenderedFeatures(e.point, {\r\n            layers: ['circle']\r\n        });\r\n        let objTitle = features[0]?.properties.title;\r\n        let objSize = features[0]?.properties.size;\r\n        let objHistory = features[0]?.properties.history;\r\n        let objSource = features[0]?.properties.source;\r\n        let objLink = features[0]?.properties.link;\r\n        let objFiles = features[0]?.properties.files ? JSON.parse(features[0]?.properties.files) : 0;\r\n        let objStats = features[0]?.properties.stats ? JSON.parse(features[0]?.properties.stats) : 0;\r\n        // console.log(objTitle)\r\n        // console.log(objSize)\r\n        // console.log(objHistory.split(','))\r\n        // console.log(objSource)\r\n        // console.log(objLink)\r\n        // console.log(objFiles)\r\n        // console.log(typeof(objStats))\r\n    \r\n        if (pointCurrentId === features[0].properties.id) {\r\n            // e.preventDefault();\r\n        } else {\r\n            pointCurrentId = features[0].properties.id;\r\n            // Анимация появления блока\r\n            if(contentPrison.classList.contains('active')) {\r\n              contentPrison.animate([\r\n                { transform: 'translateY(40%)' },\r\n                { transform: 'translateY(0%)' },\r\n            ], { duration: 400, fill: 'forwards', easing: 'ease-in' });\r\n            }\r\n            // Вывод контента \r\n            htmlMapTitle.textContent = objTitle; //Заголовок\r\n            htmlMapSize.textContent = objSize //Размер населённого пункта\r\n            htmlMapHistory.innerHTML = objHistory //История лагеря\r\n            htmlMapSource.textContent = objSource //Источник\r\n            htmlMapLink.innerHTML = objLink //Ссылка\r\n            htmlMapLink.setAttribute('href', objLink)\r\n            // Вывод изображений\r\n            if(objFiles != 0) {\r\n                htmlMapFiles.innerHTML = '';\r\n                objFiles.forEach((img, i) => {\r\n                    htmlMapFiles.innerHTML += `<img src=\"${objFiles[i]}\" >`;\r\n                })\r\n            } else {\r\n                htmlMapFiles.innerHTML = '';\r\n            }\r\n            // Вывод статистики заключенных\r\n            htmlMapGrafic.innerHTML= '';\r\n            Object.keys(objStats).forEach((key, i) => {\r\n                htmlMapGrafic.innerHTML += `\r\n                    <div class=\"info__content-line\">\r\n                    <div class=\"info__content-date js-date\">${Object.keys(objStats)[i]}</div>\r\n                    <div class=\"info__content-count\">\r\n                        <span class=\"js-count-prisoner\">${Object.values(objStats)[i]}</span>\r\n                    </div>\r\n                    </div>\r\n                `\r\n            })\r\n            let nodeStats = document.querySelectorAll('.info__content-count span');\r\n            let nodeLineStats = document.querySelectorAll('.info__content-count');\r\n            let statsWidth = document.querySelector('.info__content-grafic').offsetWidth;\r\n            let arrayStats = [];\r\n            nodeStats.forEach(item => { arrayStats.push(parseInt(item.textContent)) })\r\n        \r\n            function getMaxOfArray(numArray) {\r\n                return Math.max.apply(null, numArray);\r\n            }\r\n            let scaleX = d3.scaleLinear()\r\n                .domain([0, getMaxOfArray(arrayStats)])\r\n                .range([0, statsWidth - 100]);\r\n            nodeLineStats.forEach((line, i) => {\r\n                if (arrayStats[i] === 0) {\r\n                    line.querySelector('span').textContent = 'нет данных';\r\n                }\r\n                line.style.width = `${parseInt(scaleX(arrayStats[i]))}px`\r\n            })\r\n        }\r\n        // Перемещение карты в центральное положение относительно активного поинта\r\n        map.flyTo({\r\n            center: [\r\n                e.lngLat.lng,\r\n                e.lngLat.lat\r\n            ],\r\n            essential: true\r\n        })\r\n        // Первое открытие контента\r\n        if (!contentPrison.classList.contains('active')) {\r\n          contentPrison.classList.add('active');\r\n          contentMap.classList.add('active');\r\n          contentPrison.animate([\r\n              { top: '100vh' },\r\n              { top: '30%' },\r\n          ], { duration: 500, fill: 'forwards' });\r\n          // contentPrison.style.top = '0%';\r\n          // Сдвигаем карту на 30% вверх\r\n\r\n        }\r\n    });\r\n    \r\n    // hover cursor pointer on point\r\n    map.on('mouseenter', 'circle', () => {\r\n        map.getCanvas().style.cursor = 'pointer';\r\n    });\r\n    \r\n    // cursor default outer point\r\n    map.on('mouseleave', 'circle', () => {\r\n        map.getCanvas().style.cursor = ''\r\n    })\r\n}\r\nlet pointCurrentId;\r\nlet htmlMapTitle = document.querySelector('.js-title');\r\nlet htmlMapSize = document.querySelector('.js-size');\r\nlet htmlMapHistory = document.querySelector('.js-history');\r\nlet htmlMapSource = document.querySelector('.js-source');\r\nlet htmlMapLink = document.querySelector('.js-link');\r\nlet htmlMapFiles = document.querySelector('.js-images');\r\nlet htmlMapDate = document.querySelectorAll('.js-date');\r\nlet htmlMapCountPrisoner = document.querySelectorAll('.js-count-prisoner');\r\nlet htmlMapGrafic = document.querySelector('.info__content-grafic');\r\n\r\n// close content-map\r\nlet closeMap = document.querySelector('.close-content-map');\r\nif(closeMap) {\r\n    closeMap.addEventListener('click', () => {\r\n        if(contentMap.classList.contains('active')) {\r\n          let contentAnimate = contentPrison.animate([\r\n            { top: '30%' },\r\n            { top: '100vh' },\r\n        ], { duration: 500, fill: 'forwards'});\r\n        contentAnimate.addEventListener('finish', () => {\r\n          contentPrison.classList.remove('active')\r\n        })\r\n\r\n            contentMap.classList.remove('active')\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nwindow.onload = () => {\r\n    let sliderSection = document.querySelector('.slider');\r\n\r\n\r\n    if (sliderSection) {\r\n        let newSwiper = undefined;\r\n        window.addEventListener('resize', initSlider);\r\n    \r\n        function initSlider() {\r\n            if (window.innerWidth > 600 && newSwiper === undefined) {\r\n                newSwiper = new Swiper('.slider__items-1', {\r\n                    freeMode: true,\r\n                    mousewheel: true,\r\n                    centeredSlides: true,\r\n                    slidesPerView: 1,\r\n                    spaceBetween: 300,\r\n                    parallax: true,\r\n                    touchRatio: 0,\r\n                    allowTouchMove: false,\r\n                    init: true,\r\n                    scrollBar: {\r\n                        draggable: false,\r\n                    },\r\n                    breakpoints: {\r\n                        1450: {\r\n                            spaceBetween: 300,\r\n                        },\r\n                        768: {\r\n                            spaceBetween: 200,\r\n                        },\r\n                        0: {\r\n                            spaceBetween: 100,\r\n                        }\r\n                    }\r\n                });\r\n            } else if (window.innerWidth < 600 && newSwiper != undefined) {\r\n                newSwiper.forEach(item => {\r\n                    item.destroy();\r\n                });\r\n                let container = document.querySelectorAll('.slider__items-1');\r\n                container.forEach(slider => {\r\n                    slider.querySelectorAll('.slider__item-img').forEach(item => item.setAttribute('style', ' '))\r\n                });\r\n                newSwiper = undefined;\r\n            }\r\n        }\r\n        initSlider();\r\n        sliderSection.addEventListener('wheel', e => {\r\n            const target = e.target;\r\n            if (target.classList.contains('slider__content') || target.closest('.slider__content')) {\r\n                let progressBarLine = target.closest('.slider__content').querySelector('.progress-line');\r\n                let progressSlider = parseInt((target.closest('.slider__content').querySelector('.slider__wrapper').style.transform.split(/\\w+\\(|\\);?/)[1].split(',')[0]));\r\n                let slides = target.closest('.slider__content').querySelector('.slider__items').querySelectorAll('.slider__item');\r\n                let widthSlider = 0;\r\n                slides.forEach(slide => {\r\n                    widthSlider += parseInt(slide.offsetWidth)\r\n                });\r\n                progressBarLine.style.transform = `translateX(${Math.round(100 * (Math.abs(progressSlider / widthSlider)))}px)`;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    let prisonCards = document.querySelectorAll('.prison__item');\r\n    let prisonParent = document.querySelector('.prison__items');\r\n    if (prisonCards) {\r\n        prisonCards.forEach(card => {\r\n            card.addEventListener('mouseover', () => {\r\n                let src = card.getAttribute('data-src');\r\n                prisonParent.animate([{ opacity: .80 }, { opacity: 1 }], { duration: 300 })\r\n                prisonParent.style.backgroundImage = `url(${src})`;\r\n                // console.log(src)\r\n            })\r\n        })\r\n    }\r\n    // tabs main\r\n    let mainSlider = document.querySelector('.slider');\r\n\r\n    function tabsMain() {\r\n        let descParentTabs = document.querySelector('.slider__nav')\r\n        let btn = document.querySelectorAll('.slider__nav-tab');\r\n        let block = document.querySelectorAll('.slider__content');\r\n        btn.forEach((key, index) => {\r\n            key.addEventListener('click', function() {\r\n                block.forEach((item, itemindex) => {\r\n                    item.classList.toggle('active', index === itemindex)\r\n                    item.animate([{ opacity: 0 }, { opacity: 1, }], { duration: 300 })\r\n                });\r\n            });\r\n        });\r\n        descParentTabs.addEventListener('click', (e) => {\r\n            const target = e.target\r\n            if (target.classList.contains('slider__nav-tab')) {\r\n                btn.forEach(item => {\r\n                    item.classList.remove('active')\r\n                })\r\n            }\r\n            target.classList.add('active')\r\n        });\r\n    }\r\n    if (mainSlider) {\r\n        tabsMain();\r\n    }\r\n    // Burger menu\r\n    let burger = document.querySelector('.header__menu');\r\n    let menu = document.querySelector('.header__nav');\r\n    if (burger) {\r\n        burger.addEventListener('click', () => {\r\n                console.log('123')\r\n                burger.classList.toggle('active');\r\n                menu.classList.toggle('active')\r\n            })\r\n            // window.addEventListener('scroll', () => {\r\n            //     if (menu.classList.contains('active')) {\r\n            //         burger.classList.remove('active');\r\n            //         menu.classList.remove('active');\r\n            //     }\r\n            // })\r\n        document.addEventListener('click', e => {\r\n            const target = e.target;\r\n            if (!target.closest('.header__menu') && !target.closest('.header__nav-list')) {\r\n                menu.classList.remove('active');\r\n                burger.classList.remove('active');\r\n            }\r\n        })\r\n    }\r\n    // lang \r\n    let langDownBtn = document.querySelector('.lang-down_active');\r\n    let langDownBlock = document.querySelector('.header__lang-other');\r\n    if (langDownBtn) {\r\n        langDownBtn.addEventListener('click', () => {\r\n            langDownBlock.classList.toggle('active');\r\n        })\r\n    }\r\n})\n\n//# sourceURL=webpack://gulp-2022/./dist/js/app.js?");

/***/ }),

/***/ "./dist/js/test.js":
/*!*************************!*\
  !*** ./dist/js/test.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n\n//# sourceURL=webpack://gulp-2022/./dist/js/test.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./dist/js/app.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/js/test.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;