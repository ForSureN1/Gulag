/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/js/app.js":
/*!************************!*\
  !*** ./dist/js/app.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nwindow.onload = () => {\r\n    // window.addEventListener('resize', initSwiper)\r\n    //     // let swiperFlag = true;\r\n    //     // let sliderMainOne = null;\r\n\r\n    // function initSwiper() {\r\n\r\n    //     console.log(window.innerWidth)\r\n    //     if (window.innerWidth < 600) {\r\n\r\n    //         console.log('123')\r\n    //             // swiperFlag = false;\r\n    //         if (sliderMainOne) {\r\n    //             sliderMainOne.forEach(slider => {\r\n    //                 slider.destroy(true, false);\r\n    //                 slider = null;\r\n    //             })\r\n    //         }\r\n    //         console.log(sliderMainOne)\r\n\r\n    //         let container = document.querySelectorAll('.slider__items-1');\r\n    //         container.forEach(slider => {\r\n    //             slider.classList.remove('swiper');\r\n    //             slider.querySelector('.slider__wrapper').classList.remove('swiper-wrapper');\r\n    //             slider.querySelector('.slider__wrapper').classList.remove('swiper-backface-hidden');\r\n    //             slider.querySelectorAll('.slider__item').forEach(item => item.classList.remove('swiper-slide'))\r\n    //             slider.querySelectorAll('.slider__item-img').forEach(item => item.setAttribute('style', ' '))\r\n    //         });\r\n    //     } else if (window.innerWidth > 599) {\r\n    //         // swiperFlag = true;\r\n\r\n    //         let sliderMainOne = new Swiper('.slider__items-1', {\r\n    //             freeMode: true,\r\n    //             mousewheel: true,\r\n    //             centeredSlides: true,\r\n    //             slidesPerView: 1,\r\n    //             spaceBetween: 300,\r\n    //             parallax: true,\r\n    //             touchRatio: 0,\r\n    //             allowTouchMove: false,\r\n    //             scrollBar: {\r\n    //                 draggable: false,\r\n    //             },\r\n    //             breakpoints: {\r\n    //                 1450: {\r\n    //                     spaceBetween: 300,\r\n    //                 },\r\n    //                 768: {\r\n    //                     spaceBetween: 200,\r\n    //                 },\r\n    //                 0: {\r\n    //                     spaceBetween: 100,\r\n    //                 }\r\n    //             }\r\n    //         })\r\n    //         console.log(sliderMainOne)\r\n    //     }\r\n    // }\r\n\r\n    // initSwiper();\r\n\r\n\r\n    let newSwiper = undefined;\r\n    window.addEventListener('resize', initSlider);\r\n\r\n    function initSlider() {\r\n        if (window.innerWidth > 600 && newSwiper === undefined) {\r\n            newSwiper = new Swiper('.slider__items-1', {\r\n                freeMode: true,\r\n                mousewheel: true,\r\n                centeredSlides: true,\r\n                slidesPerView: 1,\r\n                spaceBetween: 300,\r\n                parallax: true,\r\n                touchRatio: 0,\r\n                allowTouchMove: false,\r\n                init: true,\r\n                scrollBar: {\r\n                    draggable: false,\r\n                },\r\n                breakpoints: {\r\n                    1450: {\r\n                        spaceBetween: 300,\r\n                    },\r\n                    768: {\r\n                        spaceBetween: 200,\r\n                    },\r\n                    0: {\r\n                        spaceBetween: 100,\r\n                    }\r\n                }\r\n            });\r\n        } else if (window.innerWidth < 600 && newSwiper != undefined) {\r\n            newSwiper.forEach(item => {\r\n                item.destroy();\r\n            });\r\n            let container = document.querySelectorAll('.slider__items-1');\r\n            container.forEach(slider => {\r\n                slider.querySelectorAll('.slider__item-img').forEach(item => item.setAttribute('style', ' '))\r\n            });\r\n            newSwiper = undefined;\r\n        }\r\n    }\r\n\r\n    initSlider();\r\n\r\n\r\n    let sliderSection = document.querySelector('.slider');\r\n\r\n\r\n    if (sliderSection) {\r\n        sliderSection.addEventListener('wheel', e => {\r\n            const target = e.target;\r\n            if (target.classList.contains('slider__content') || target.closest('.slider__content')) {\r\n                let progressBarLine = target.closest('.slider__content').querySelector('.progress-line');\r\n                let progressSlider = parseInt((target.closest('.slider__content').querySelector('.slider__wrapper').style.transform.split(/\\w+\\(|\\);?/)[1].split(',')[0]));\r\n                let slides = target.closest('.slider__content').querySelector('.slider__items').querySelectorAll('.slider__item');\r\n                let widthSlider = 0;\r\n                slides.forEach(slide => {\r\n                    widthSlider += parseInt(slide.offsetWidth)\r\n                });\r\n                progressBarLine.style.transform = `translateX(${Math.round(100 * (Math.abs(progressSlider / widthSlider)))}px)`;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    let prisonCards = document.querySelectorAll('.prison__item');\r\n    let prisonParent = document.querySelector('.prison__items');\r\n    if (prisonCards) {\r\n        prisonCards.forEach(card => {\r\n            card.addEventListener('mouseover', () => {\r\n                let src = card.getAttribute('data-src');\r\n                prisonParent.animate([{ opacity: .80 }, { opacity: 1 }], { duration: 300 })\r\n                prisonParent.style.backgroundImage = `url(${src})`;\r\n                // console.log(src)\r\n            })\r\n        })\r\n    }\r\n    // tabs main\r\n    let mainSlider = document.querySelector('.slider');\r\n\r\n    function tabsMain() {\r\n        let descParentTabs = document.querySelector('.slider__nav')\r\n        let btn = document.querySelectorAll('.slider__nav-tab');\r\n        let block = document.querySelectorAll('.slider__content');\r\n        btn.forEach((key, index) => {\r\n            key.addEventListener('click', function() {\r\n                block.forEach((item, itemindex) => {\r\n                    item.classList.toggle('active', index === itemindex)\r\n                    item.animate([{ opacity: 0 }, { opacity: 1, }], { duration: 300 })\r\n                });\r\n            });\r\n        });\r\n        descParentTabs.addEventListener('click', (e) => {\r\n            const target = e.target\r\n            if (target.classList.contains('slider__nav-tab')) {\r\n                btn.forEach(item => {\r\n                    item.classList.remove('active')\r\n                })\r\n            }\r\n            target.classList.add('active')\r\n        });\r\n    }\r\n    if (mainSlider) {\r\n        tabsMain();\r\n    }\r\n    // Burger menu\r\n    let burger = document.querySelector('.header__menu');\r\n    let menu = document.querySelector('.header__nav');\r\n    if (burger) {\r\n        burger.addEventListener('click', () => {\r\n                console.log('123')\r\n                burger.classList.toggle('active');\r\n                menu.classList.toggle('active')\r\n            })\r\n            // window.addEventListener('scroll', () => {\r\n            //     if (menu.classList.contains('active')) {\r\n            //         burger.classList.remove('active');\r\n            //         menu.classList.remove('active');\r\n            //     }\r\n            // })\r\n        document.addEventListener('click', e => {\r\n            const target = e.target;\r\n            if (!target.closest('.header__menu') && !target.closest('.header__nav-list')) {\r\n                menu.classList.remove('active');\r\n                burger.classList.remove('active');\r\n            }\r\n        })\r\n    }\r\n    // lang \r\n    let langDownBtn = document.querySelector('.lang-down_active');\r\n    let langDownBlock = document.querySelector('.header__lang-other');\r\n    if (langDownBtn) {\r\n        langDownBtn.addEventListener('click', () => {\r\n            langDownBlock.classList.toggle('active');\r\n        })\r\n    }\r\n})\n\n//# sourceURL=webpack://gulp-2022/./dist/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;